{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rutwi\\\\Web Apps\\\\visualiser\\\\src\\\\pfv\\\\pfv.jsx\";\nimport React, { Component } from 'react';\nimport Node from \"./Node/Node\";\nimport \"./pfv.css\";\nexport default class PFV extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodes: []\n    };\n  }\n\n  componentDidMount() {\n    const nodes = [];\n\n    for (let row = 0; row < 20; row++) {\n      const currentRow = [];\n\n      for (let col = 0; col < 50; col++) {\n        const currentNode = {\n          col,\n          row,\n          isStart: row === 10 && col === 5,\n          isFinish: row === 10 && col === 45\n        };\n        currentRow.push(currentNode);\n      }\n\n      nodes.push(currentRow);\n    }\n\n    this.setState({\n      nodes\n    });\n  }\n\n  render() {\n    const {\n      nodes\n    } = this.state;\n    console.log(nodes);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, nodes.map((row, rowIdx) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: rowIdx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }\n      }, row.map((node, nodeIdx) => {\n        const {\n          isStart,\n          isFinish\n        } = node;\n        return /*#__PURE__*/React.createElement(Node, {\n          key: nodeIdx,\n          isStart: isStart,\n          isFinish: isFinish,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 37\n          }\n        });\n      }));\n    }));\n  }\n\n}\n/*function pfv(){\r\n    this.state={\r\n        nodes: [],\r\n    };\r\n    function componentDidMount(){\r\n        const nodes = [];\r\n        for(let row = 0;row<15 ; row++){\r\n            const currentRow = [];\r\n            for(let col=0;col<50;col++){\r\n                currentRow.push([]);\r\n            }\r\n            this.state.nodes.push(currentRow);\r\n        }\r\n        this.setState({nodes})\r\n    }\r\n    return(\r\n        <div className=\"grid\">\r\n                <h1>\r\n                    Hello There!\r\n                </h1>\r\n                {this.state.nodes.map((row,rowIDx)=>{\r\n                    return (\r\n                        <div>\r\n                            {row.map((node,nodeIdx)=> <Node></Node>)}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n    )\r\n}\r\nexport default PFV;*/","map":{"version":3,"sources":["C:/Users/rutwi/Web Apps/visualiser/src/pfv/pfv.jsx"],"names":["React","Component","Node","PFV","constructor","props","state","nodes","componentDidMount","row","currentRow","col","currentNode","isStart","isFinish","push","setState","render","console","log","map","rowIdx","node","nodeIdx"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,WAAP;AAEA,eAAe,MAAMC,GAAN,SAAkBF,SAAlB,CAA2B;AACtCG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAE;AADA,KAAX;AAGH;;AACDC,EAAAA,iBAAiB,GAAE;AACf,UAAMD,KAAK,GAAG,EAAd;;AACA,SAAI,IAAIE,GAAG,GAAG,CAAd,EAAkBA,GAAG,GAAG,EAAxB,EAA6BA,GAAG,EAAhC,EAAmC;AAC/B,YAAMC,UAAU,GAAG,EAAnB;;AACA,WAAI,IAAIC,GAAG,GAAC,CAAZ,EAAcA,GAAG,GAAC,EAAlB,EAAqBA,GAAG,EAAxB,EAA2B;AACvB,cAAMC,WAAW,GAAG;AAChBD,UAAAA,GADgB;AAEhBF,UAAAA,GAFgB;AAGhBI,UAAAA,OAAO,EAAEJ,GAAG,KAAK,EAAR,IAAcE,GAAG,KAAI,CAHd;AAIhBG,UAAAA,QAAQ,EAAEL,GAAG,KAAK,EAAR,IAAcE,GAAG,KAAK;AAJhB,SAApB;AAMAD,QAAAA,UAAU,CAACK,IAAX,CAAgBH,WAAhB;AACH;;AACDL,MAAAA,KAAK,CAACQ,IAAN,CAAWL,UAAX;AACH;;AACD,SAAKM,QAAL,CAAc;AAACT,MAAAA;AAAD,KAAd;AACH;;AAEDU,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACV,MAAAA;AAAD,QAAU,KAAKD,KAArB;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,KAAK,CAACa,GAAN,CAAU,CAACX,GAAD,EAAKY,MAAL,KAAc;AACrB,0BACI;AAAK,QAAA,GAAG,EAAGA,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKZ,GAAG,CAACW,GAAJ,CAAQ,CAACE,IAAD,EAAMC,OAAN,KAAgB;AACrB,cAAM;AAACV,UAAAA,OAAD;AAASC,UAAAA;AAAT,YAAqBQ,IAA3B;AACA,4BACI,oBAAC,IAAD;AACA,UAAA,GAAG,EAAIC,OADP;AAEA,UAAA,OAAO,EAAEV,OAFT;AAGA,UAAA,QAAQ,EAAEC,QAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,OAVA,CADL,CADJ;AAeH,KAhBA,CADL,CADJ;AAqBH;;AAjDqC;AAoD1C","sourcesContent":["import React, {Component} from 'react';\r\nimport Node from \"./Node/Node\"\r\nimport \"./pfv.css\";\r\n\r\nexport default class PFV extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            nodes: [],\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        const nodes = [];\r\n        for(let row = 0 ; row < 20 ; row++){\r\n            const currentRow = [];\r\n            for(let col=0;col<50;col++){\r\n                const currentNode = {\r\n                    col,\r\n                    row,\r\n                    isStart: row === 10 && col ===5,\r\n                    isFinish: row === 10 && col === 45,\r\n                };\r\n                currentRow.push(currentNode);\r\n            }\r\n            nodes.push(currentRow);\r\n        }\r\n        this.setState({nodes})\r\n    }\r\n\r\n    render(){\r\n        const {nodes} = this.state;\r\n        console.log(nodes)\r\n        return(\r\n            <div className=\"grid\">\r\n                {nodes.map((row,rowIdx)=>{\r\n                    return (\r\n                        <div key ={rowIdx}>\r\n                            {row.map((node,nodeIdx)=>{\r\n                                const {isStart,isFinish} = node;\r\n                                return (\r\n                                    <Node\r\n                                    key = {nodeIdx}\r\n                                    isStart={isStart}\r\n                                    isFinish={isFinish}\r\n                                    >\r\n                                    </Node>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/*function pfv(){\r\n    this.state={\r\n        nodes: [],\r\n    };\r\n    function componentDidMount(){\r\n        const nodes = [];\r\n        for(let row = 0;row<15 ; row++){\r\n            const currentRow = [];\r\n            for(let col=0;col<50;col++){\r\n                currentRow.push([]);\r\n            }\r\n            this.state.nodes.push(currentRow);\r\n        }\r\n        this.setState({nodes})\r\n    }\r\n    return(\r\n        <div className=\"grid\">\r\n                <h1>\r\n                    Hello There!\r\n                </h1>\r\n                {this.state.nodes.map((row,rowIDx)=>{\r\n                    return (\r\n                        <div>\r\n                            {row.map((node,nodeIdx)=> <Node></Node>)}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n    )\r\n}\r\nexport default PFV;*/"]},"metadata":{},"sourceType":"module"}