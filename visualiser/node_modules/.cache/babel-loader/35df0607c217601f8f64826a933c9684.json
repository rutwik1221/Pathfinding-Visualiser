{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rutwi\\\\Web Apps\\\\visualiser\\\\src\\\\pfv\\\\pfv.jsx\";\nimport React, { Component } from 'react';\nimport Node from \"./Node/Node\";\nimport \"./pfv.css\";\nconst START_NODE_ROW = 10;\nconst START_NODE_COL = 15;\nconst END_NODE_ROW = 10;\nconst END_NODE_COL = 35;\nexport default class PFV extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: []\n    };\n  }\n\n  componentDidMount() {\n    const grid = getGrid();\n    this.setState({\n      grid\n    });\n  }\n\n  render() {\n    const {\n      grid\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, grid.map((row, rowIdx) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: rowIdx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }\n      }, row.map((node, nodeIdx) => {\n        const {\n          row,\n          col,\n          isStart,\n          isEnd,\n          isWall\n        } = node;\n        return /*#__PURE__*/React.createElement(Node, {\n          key: nodeIdx,\n          row: row,\n          col: col,\n          isStart: isStart,\n          isEnd: isEnd,\n          isWall: isWall,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 37\n          }\n        });\n      }));\n    }));\n  }\n\n}\n\nfunction getGrid() {\n  const grid = [];\n\n  for (let row = 0; row < 20; row++) {\n    const currentRow = [];\n\n    for (let col = 0; col < 50; col++) {\n      currentRow.push(createNode(col, row));\n    }\n\n    grid.push(currentRow);\n  }\n\n  return grid;\n}\n\nfunction createNode(col, row) {\n  return {\n    col,\n    row,\n    isStart: row === START_NODE_ROW && col === START_NODE_COL,\n    isEnd: row === END_NODE_ROW && col === END_NODE_COL,\n    distance: Infinity,\n    isVisited: false,\n    isWall: false,\n    previousNode: null\n  };\n}\n/*\r\nconst nodes = [];\r\n        for(let row = 0 ; row < 20 ; row++){\r\n            const currentRow = [];\r\n            for(let col=0;col<50;col++){\r\n                const currentNode = {\r\n                    col,\r\n                    row,\r\n                    isStart: row === 10 && col ===5,\r\n                    isFinish: row === 10 && col === 45,\r\n                };\r\n                currentRow.push(currentNode);\r\n            }\r\n            nodes.push(currentRow);\r\n        }\r\n        this.setState({nodes})\r\n         */","map":{"version":3,"sources":["C:/Users/rutwi/Web Apps/visualiser/src/pfv/pfv.jsx"],"names":["React","Component","Node","START_NODE_ROW","START_NODE_COL","END_NODE_ROW","END_NODE_COL","PFV","constructor","props","state","grid","componentDidMount","getGrid","setState","render","map","row","rowIdx","node","nodeIdx","col","isStart","isEnd","isWall","currentRow","push","createNode","distance","Infinity","isVisited","previousNode"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,WAAP;AACA,MAAMC,cAAc,GAAG,EAAvB;AACA,MAAMC,cAAc,GAAG,EAAvB;AACA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,YAAY,GAAG,EAArB;AAEA,eAAe,MAAMC,GAAN,SAAkBN,SAAlB,CAA2B;AACtCO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,IAAI,EAAE;AADC,KAAX;AAGH;;AACDC,EAAAA,iBAAiB,GAAE;AAChB,UAAMD,IAAI,GAAGE,OAAO,EAApB;AACA,SAAKC,QAAL,CAAc;AAACH,MAAAA;AAAD,KAAd;AACF;;AAEDI,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACJ,MAAAA;AAAD,QAAS,KAAKD,KAApB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,IAAI,CAACK,GAAL,CAAS,CAACC,GAAD,EAAKC,MAAL,KAAc;AACpB,0BACI;AAAK,QAAA,GAAG,EAAGA,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,GAAG,CAACD,GAAJ,CAAQ,CAACG,IAAD,EAAMC,OAAN,KAAgB;AACrB,cAAM;AAACH,UAAAA,GAAD;AAAMI,UAAAA,GAAN;AAAWC,UAAAA,OAAX;AAAmBC,UAAAA,KAAnB;AAA0BC,UAAAA;AAA1B,YAAoCL,IAA1C;AACA,4BACI,oBAAC,IAAD;AACA,UAAA,GAAG,EAAIC,OADP;AAEA,UAAA,GAAG,EAAEH,GAFL;AAGA,UAAA,GAAG,EAAEI,GAHL;AAIA,UAAA,OAAO,EAAEC,OAJT;AAKA,UAAA,KAAK,EAAEC,KALP;AAMA,UAAA,MAAM,EAAEC,MANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,OAZA,CADL,CADJ;AAiBH,KAlBA,CADL,CADJ;AAuBH;;AArCqC;;AAwC1C,SAASX,OAAT,GAAmB;AACf,QAAMF,IAAI,GAAG,EAAb;;AACA,OAAI,IAAIM,GAAG,GAAC,CAAZ,EAAcA,GAAG,GAAC,EAAlB,EAAqBA,GAAG,EAAxB,EAA2B;AACvB,UAAMQ,UAAU,GAAG,EAAnB;;AACA,SAAI,IAAIJ,GAAG,GAAC,CAAZ,EAAcA,GAAG,GAAC,EAAlB,EAAqBA,GAAG,EAAxB,EAA2B;AACvBI,MAAAA,UAAU,CAACC,IAAX,CAAgBC,UAAU,CAACN,GAAD,EAAKJ,GAAL,CAA1B;AACH;;AACDN,IAAAA,IAAI,CAACe,IAAL,CAAUD,UAAV;AACH;;AACD,SAAOd,IAAP;AACH;;AACD,SAASgB,UAAT,CAAoBN,GAApB,EAAwBJ,GAAxB,EAA4B;AACxB,SAAM;AACFI,IAAAA,GADE;AAEFJ,IAAAA,GAFE;AAGFK,IAAAA,OAAO,EAACL,GAAG,KAAKd,cAAR,IAA0BkB,GAAG,KAAGjB,cAHtC;AAIFmB,IAAAA,KAAK,EAAEN,GAAG,KAAIZ,YAAP,IAAuBgB,GAAG,KAAKf,YAJpC;AAKFsB,IAAAA,QAAQ,EAAEC,QALR;AAMFC,IAAAA,SAAS,EAAE,KANT;AAOFN,IAAAA,MAAM,EAAE,KAPN;AAQFO,IAAAA,YAAY,EAAE;AARZ,GAAN;AAUH;AAED","sourcesContent":["import React, {Component} from 'react';\r\nimport Node from \"./Node/Node\"\r\nimport \"./pfv.css\";\r\nconst START_NODE_ROW = 10;\r\nconst START_NODE_COL = 15;\r\nconst END_NODE_ROW = 10;\r\nconst END_NODE_COL = 35;\r\n\r\nexport default class PFV extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            grid: [],\r\n        };\r\n    }\r\n    componentDidMount(){\r\n       const grid = getGrid();\r\n       this.setState({grid}) ;\r\n    } \r\n\r\n    render(){\r\n        const {grid} = this.state;\r\n        return(\r\n            <div className=\"grid\">\r\n                {grid.map((row,rowIdx)=>{\r\n                    return (\r\n                        <div key ={rowIdx}>\r\n                            {row.map((node,nodeIdx)=>{\r\n                                const {row, col, isStart,isEnd, isWall} = node;\r\n                                return (\r\n                                    <Node\r\n                                    key = {nodeIdx}\r\n                                    row={row}\r\n                                    col={col}\r\n                                    isStart={isStart}\r\n                                    isEnd={isEnd}\r\n                                    isWall={isWall}\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    ); \r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction getGrid() {\r\n    const grid = [];\r\n    for(let row=0;row<20;row++){\r\n        const currentRow = [];\r\n        for(let col=0;col<50;col++){\r\n            currentRow.push(createNode(col,row));\r\n        }\r\n        grid.push(currentRow);\r\n    }\r\n    return grid;\r\n}\r\nfunction createNode(col,row){\r\n    return{\r\n        col,\r\n        row,\r\n        isStart:row === START_NODE_ROW && col===START_NODE_COL,\r\n        isEnd: row=== END_NODE_ROW && col === END_NODE_COL,\r\n        distance: Infinity,\r\n        isVisited: false,\r\n        isWall: false,\r\n        previousNode: null,\r\n    };\r\n}\r\n\r\n/*\r\nconst nodes = [];\r\n        for(let row = 0 ; row < 20 ; row++){\r\n            const currentRow = [];\r\n            for(let col=0;col<50;col++){\r\n                const currentNode = {\r\n                    col,\r\n                    row,\r\n                    isStart: row === 10 && col ===5,\r\n                    isFinish: row === 10 && col === 45,\r\n                };\r\n                currentRow.push(currentNode);\r\n            }\r\n            nodes.push(currentRow);\r\n        }\r\n        this.setState({nodes})\r\n         */"]},"metadata":{},"sourceType":"module"}